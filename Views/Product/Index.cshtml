@model IEnumerable<ProductResponseDTO>

@{
    ViewBag.Title = "Product Page";
}

<h1> Product </h1>
@if (User.IsInRole("Admin"))
{
    <a asp-action="Create" asp-controller="Product" class="btn btn-secondary">Create Product</a>  
}

<table id="Products" class="display table table-striped shadow-sm p-3 my-2 bg-dark rounded p-3">
    <thead>
        <tr>
            <th>Id</th>
            <th>Product Name</th>
            <th>Latest Price</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Model)
        {
            <tr>
                <td>@product.ProductId</td>
                <td>@product.ProductName</td>
                <td>@product.Price</td>
                <td>
                    @if (User.IsInRole("Admin"))
                    {
                        <a asp-action="Update" asp-controller="Product" asp-route-productId="@product.ProductId" class="btn btn-warning btn-sm">Edit</a>

                        <a asp-action="Delete" asp-controller="Product" asp-route-productId="@product.ProductId" class="btn btn-danger btn-sm">Delete</a> 
                    }

                    <a asp-action="Details" asp-controller="Product" asp-route-productId="@product.ProductId" class="btn btn-info btn-sm">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {

    <script>
        $(document).ready(function () {
            $('#Products').DataTable({
                paging: true,
                searching: true,
                ordering: true,
                info: true,
                columnDefs: [
                    {
                        targets: -1, // Targets the last column
                        searchable: false,// Disables searching/filtering for this column
                        sortable: false
                    }
                ]
            });
        });
    </script>

}

